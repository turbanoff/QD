/*
 * !++
 * QDS - Quick Data Signalling Library
 * !-
 * Copyright (C) 2002 - 2018 Devexperts LLC
 * !-
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at
 * http://mozilla.org/MPL/2.0/.
 * !__
 */
package com.dxfeed.event.market.impl;

import com.devexperts.qd.DataRecord;
import com.devexperts.qd.ng.RecordCursor;
import com.devexperts.qd.util.Decimal;
import com.devexperts.qd.util.MappingUtil;

public final class FundamentalMapping extends MarketEventMapping {
// BEGIN: CODE AUTOMATICALLY GENERATED: DO NOT MODIFY. IT IS REGENERATED BY com.dxfeed.api.codegen.ImplCodeGen
	private final int iOpen;
	private final int iHigh;
	private final int iLow;
	private final int iClose;
	private final int iOpenInterest;

	public FundamentalMapping(DataRecord record) {
		super(record);
		iOpen = MappingUtil.findIntField(record, "Open.Price", true);
		iHigh = MappingUtil.findIntField(record, "High.Price", true);
		iLow = MappingUtil.findIntField(record, "Low.Price", true);
		iClose = MappingUtil.findIntField(record, "Close.Price", true);
		iOpenInterest = MappingUtil.findIntField(record, "OpenInterest", false);
		putNonDefaultPropertyName("Open.Price", "Open");
		putNonDefaultPropertyName("High.Price", "High");
		putNonDefaultPropertyName("Low.Price", "Low");
		putNonDefaultPropertyName("Close.Price", "Close");
	}

	@Deprecated
	public double getOpenPrice(RecordCursor cursor) {
		return Decimal.toDouble(getInt(cursor, iOpen));
	}

	@Deprecated
	public void setOpenPrice(RecordCursor cursor, double openPrice) {
		setInt(cursor, iOpen, Decimal.compose(openPrice));
	}

	@Deprecated
	public int getOpenPriceDecimal(RecordCursor cursor) {
		return getInt(cursor, iOpen);
	}

	@Deprecated
	public void setOpenPriceDecimal(RecordCursor cursor, int openPrice) {
		setInt(cursor, iOpen, openPrice);
	}

	public double getOpen(RecordCursor cursor) {
		return Decimal.toDouble(getInt(cursor, iOpen));
	}

	public void setOpen(RecordCursor cursor, double open) {
		setInt(cursor, iOpen, Decimal.compose(open));
	}

	public int getOpenDecimal(RecordCursor cursor) {
		return getInt(cursor, iOpen);
	}

	public void setOpenDecimal(RecordCursor cursor, int open) {
		setInt(cursor, iOpen, open);
	}

	@Deprecated
	public double getHighPrice(RecordCursor cursor) {
		return Decimal.toDouble(getInt(cursor, iHigh));
	}

	@Deprecated
	public void setHighPrice(RecordCursor cursor, double highPrice) {
		setInt(cursor, iHigh, Decimal.compose(highPrice));
	}

	@Deprecated
	public int getHighPriceDecimal(RecordCursor cursor) {
		return getInt(cursor, iHigh);
	}

	@Deprecated
	public void setHighPriceDecimal(RecordCursor cursor, int highPrice) {
		setInt(cursor, iHigh, highPrice);
	}

	public double getHigh(RecordCursor cursor) {
		return Decimal.toDouble(getInt(cursor, iHigh));
	}

	public void setHigh(RecordCursor cursor, double high) {
		setInt(cursor, iHigh, Decimal.compose(high));
	}

	public int getHighDecimal(RecordCursor cursor) {
		return getInt(cursor, iHigh);
	}

	public void setHighDecimal(RecordCursor cursor, int high) {
		setInt(cursor, iHigh, high);
	}

	@Deprecated
	public double getLowPrice(RecordCursor cursor) {
		return Decimal.toDouble(getInt(cursor, iLow));
	}

	@Deprecated
	public void setLowPrice(RecordCursor cursor, double lowPrice) {
		setInt(cursor, iLow, Decimal.compose(lowPrice));
	}

	@Deprecated
	public int getLowPriceDecimal(RecordCursor cursor) {
		return getInt(cursor, iLow);
	}

	@Deprecated
	public void setLowPriceDecimal(RecordCursor cursor, int lowPrice) {
		setInt(cursor, iLow, lowPrice);
	}

	public double getLow(RecordCursor cursor) {
		return Decimal.toDouble(getInt(cursor, iLow));
	}

	public void setLow(RecordCursor cursor, double low) {
		setInt(cursor, iLow, Decimal.compose(low));
	}

	public int getLowDecimal(RecordCursor cursor) {
		return getInt(cursor, iLow);
	}

	public void setLowDecimal(RecordCursor cursor, int low) {
		setInt(cursor, iLow, low);
	}

	@Deprecated
	public double getClosePrice(RecordCursor cursor) {
		return Decimal.toDouble(getInt(cursor, iClose));
	}

	@Deprecated
	public void setClosePrice(RecordCursor cursor, double closePrice) {
		setInt(cursor, iClose, Decimal.compose(closePrice));
	}

	@Deprecated
	public int getClosePriceDecimal(RecordCursor cursor) {
		return getInt(cursor, iClose);
	}

	@Deprecated
	public void setClosePriceDecimal(RecordCursor cursor, int closePrice) {
		setInt(cursor, iClose, closePrice);
	}

	public double getClose(RecordCursor cursor) {
		return Decimal.toDouble(getInt(cursor, iClose));
	}

	public void setClose(RecordCursor cursor, double close) {
		setInt(cursor, iClose, Decimal.compose(close));
	}

	public int getCloseDecimal(RecordCursor cursor) {
		return getInt(cursor, iClose);
	}

	public void setCloseDecimal(RecordCursor cursor, int close) {
		setInt(cursor, iClose, close);
	}

	public int getOpenInterest(RecordCursor cursor) {
		if (iOpenInterest < 0)
			return 0;
		return getInt(cursor, iOpenInterest);
	}

	public void setOpenInterest(RecordCursor cursor, int openInterest) {
		if (iOpenInterest < 0)
			return;
		setInt(cursor, iOpenInterest, openInterest);
	}
// END: CODE AUTOMATICALLY GENERATED
}
