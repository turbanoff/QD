###
# !++
# QDS - Quick Data Signalling Library
# !-
# Copyright (C) 2002 - 2018 Devexperts LLC
# !-
# This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
# If a copy of the MPL was not distributed with this file, You can obtain one at
# http://mozilla.org/MPL/2.0/.
# !__
###

#--------------------------------------------------------------------------------------------
# Default configuration file for dxfeed webservice data connection.
# To specify a different configuration file, use the following JVM system property:
#
#    -Ddxfeed.properties=PATH-TO-DXFEED.PROPERTIES
#
# Or specify path to the configuration file in JNDI property java:comp/env/dxfeed.properties if
# need to have different deployments of webservice inside a single application server.
# The latter approach takes precedence.
#
# For Jetty 9 you need two steps:
#
#   1. Run jetty with "plus" and "websocket" modules. This can be done via start.ini or
#      using "java -jar start.jar --module=plus,websocket"
#   2. Declare the corresponding webapp context. Here is an example "webservice.xml" file that can be dropped into
#      Jetty "webapps" directory:
#
#  <Configure id="webservice" class="org.eclipse.jetty.webapp.WebAppContext">
#    <Set name="contextPath">/webservice</Set>
#    <Set name="war">PATH-TO-DXFEED-WEBSERVICE-WAR-FILE</Set>
#    <Set name="extractWAR">true</Set> <!-- optional -->
#
#    <!--  JNDI java:comp/env/dxfeed.properties -->
#    <New class="org.eclipse.jetty.plus.jndi.EnvEntry">
#      <Arg><Ref id="webservice"/></Arg> <!-- Configuration for this webservice only -->
#      <Arg>dxfeed.properties</Arg>
#      <Arg>PATH-TO-DXFEED.PROPERTIES</Arg>
#      <Arg type="boolean">true</Arg>
#    </New>
#  </Configure>
#
#--------------------------------------------------------------------------------------------

# Default connection address
dxfeed.address=(demo.dxfeed.com:7300)(ondemand:demo.dxfeed.com:7680)
dxfeed.user=demo
dxfeed.password=demo

# Create permanent subscription to key data records for all symbols from a demo feed,
# so that requests for data snapshots are completed immediately because last events are already in memory
dxfeed.qd.subscribe.ticker=Quote,Trade,Summary,Profile http://dxfeed.s3.amazonaws.com/masterdata/ipf/demo/mux-demo.ipf.zip

# Send data at most every 0.1 second (100 ms)
dxfeed.aggregationPeriod=0.1s

# Sets the size of thread pool, equal to the number of processors if not specified
# dxfeed.threadPoolSize=5

# Endpoint name for logging and monitoring purposes.
# If you deploy multiple copies of webservice in the same app server, then provide each one with a unique name.
name=webservice

# Report stats to log and MARS every 10 seconds
monitoring.stat=10s

#
# The following additional properties are also available for advanced monitoring:
#
#  jmx.html.port=<port-for-html-jmx-console>
#  jmx.html.bind=<bind-addr-for-html-jmx-console>
#  jmx.html.ssl=true
#  jmx.html.auth=<user1>:<password1>,<user2>:<password2>,...
#
#  jmx.rmi.port=<port-for-rmi-jmx-console>
#
#  mars.root=<root-node-for-mars>
#  mars.address=<address-for-mars>
#
